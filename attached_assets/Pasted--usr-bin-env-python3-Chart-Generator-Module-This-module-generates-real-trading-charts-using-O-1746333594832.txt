#!/usr/bin/env python3
"""
Chart Generator Module

This module generates real trading charts using Oanda price data and mplfinance.
These charts are used instead of static sample images for screenshot analysis.
"""

import os
import logging
from datetime import datetime
import pandas as pd
import matplotlib.pyplot as plt
import matplotlib
matplotlib.use('Agg')  # Use non-interactive backend
import mplfinance as mpf

from real_chart_generator import generate_candlestick_chart

logger = logging.getLogger(__name__)

def generate_chart_for_asset(asset, timeframe='M15', num_periods=100):
    """
    Generate a chart for a specific asset from the database
    
    Args:
        asset: Asset object
        timeframe: Chart timeframe
        
    Returns:
        str: Path to the generated chart
    """
    try:
        logger.info(f"Generating chart for {asset.symbol} with timeframe {timeframe}")
        
        # Convert internal symbol format to Oanda format if needed
        symbol = asset.symbol
        if symbol == "XAUUSD":
            oanda_symbol = "XAU_USD"
        elif len(symbol) == 6:  # Forex pairs
            oanda_symbol = f"{symbol[:3]}_{symbol[3:]}"
        else:
            oanda_symbol = symbol
        
        # Generate chart using the standalone chart generator
        output_path = generate_candlestick_chart(oanda_symbol, timeframe, num_periods)
        
        if output_path and os.path.exists(output_path):
            logger.info(f"Successfully generated chart for {asset.symbol} at {output_path}")
            return output_path
        else:
            logger.warning(f"Failed to generate chart for {asset.symbol}")
            return None
    except Exception as e:
        logger.error(f"Error generating chart for {asset.symbol}: {str(e)}")
        return None

def get_all_active_timeframes():
    """
    Return a list of all active timeframes for charts
    
    Returns:
        list: List of timeframe strings
    """
    return ['M5', 'M15', 'M30', 'H1', 'H4', 'D']
